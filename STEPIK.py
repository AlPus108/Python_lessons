# ЭКРАНИРОВАНИЕ
# a = "строка с \" кавычкой двойной и \' одинарной"

# Чтобы в строке появился символ обратной косой черты
# a = "Строка с обратным слешем \\"

# Перенос строки
# a = "Первая строка \nВторая строка

'''
Сделать перенос строки в Питоне можно и другим способом — объявить строку с помощью тройных кавычек.
То есть вы как бы сразу расставляете переносы строк прямо в программе, записывая значение переменной на разных строках.
Со строками, объявленными с помощью одинарных кавычек, так сделать не получится.

a = """Первая строка
Вторая строка
Третья строка"""

Помните, что если строка начинается с трёх кавычек, то и заканчиваться она должна тремя такими же кавычками.
'''
# a = '''Первая строка
# Вторая строка
# Третья строка'''
# print(a)
# ------------------------------------------
'''
result = print('Что вернет функция print?')
print(result)
Первой строкой эта программа выведет текст "Что вернет функция print?", а второй — слово None.

Специально для обозначения «ничего» в Питоне есть отдельный тип данных NoneType. 
Переменные этого типа могут иметь только одно значение — None. None — это «никакое» или «неопределенное» значение. 
В программе выше переменная result как раз и будет иметь значение None. Это одно из ключевых слов языка и, 
если вы хотите присвоить None переменной, его надо писать как есть, без кавычек:

z = None
'''





# ---------------------------------------------------
# КВАДРАТНЫЙ КОРЕНЬ ИЗ ЧИСЛА
# print(9 ** 0.5)  # Возвведение числа в степень 0.5 дает квадратный корень этого числа
# ----------------------------------------------------
# фОРМАТ ЕСТЕСТВЕННЫХ ЧИСЕЛ - через е-1
# print(5e-1)  # это то же самое, что и 0.5. Число пять умножается на 10 в степени -1
# print(5 * 10**-1)  # запись идентичная первой
#
# print(1234e-2)  # это то же самое выражение, что и
# print(1234 * 10**-2)
#
# #  Также можно использовать положительную степень
# print(1234e2) # аналогично (1234 * 10**2)
# print(1234 * 10**2) # 10**2 - 10 в квадрате
# -------------------------------------------------------
# #Помните, что любые арифметические операции выше по приоритету операций сравнения и логических операторов.
# -------------------------------------------------------

# Площадь треугольника:
# S = √p(p - a)(p - b)(p - c), где p = (a + b + c) / 2
# где (a + b + c) / 2
# Площадь прямоугольника:
# S = a · b
# Площадь круга:
# S = π r2

# Вычисление площади фигур
# s = input()
# if s == "треугольник":
#     a = float(input())
#     b = float(input())
#     c = float(input())
#     p = (a + b + c) / 2
#     print((p*((p-a)*(p-b)*(p-c)))**0.5)  # Вычислене площади треугольника по формуле Герона
# elif s == "прямоугольник":
#     a = float(input())
#     b = float(input())
#     print(a * b)
# elif s == "круг":
#     r = float(input())
#     print(3.14 * r**2)

#  ----------------------------------------------------
# Склонение существительных
# x = int(input())
#
# if x % 10 == 1 and x % 100 != 11:
#     print(x, 'программист')
# # elif x % 10 == 2 and x % 20 != 12 or x % 10 == 3 and x % 20 != 13 or x % 10 == 4 and x % 20 != 14:
# elif (x % 10 >= 2) and (x % 10 <= 4) and (x % 100 < 10 or x % 100 > 20):
#     print(x, 'программиста')
# else:
#     print(x, 'программистов')

# --------------------------------------------------

# Счастливый билет. Сумма первых трех цифр должна быть равна сумме последних трех
# x = int(input())
# n1 = x % 10
# x = x // 10
# n2 = x % 10
# x = x // 10
# n3 = x % 10
# x = x // 10
# n4 = x % 10
# x = x // 10
# n5 = x % 10
# x = x // 10
# n6 = x % 10
# if n1 + n2 + n3 == n4 + n5 + n6:
#     print('Счастливый')
# else:
#     print("Обычный")

# ------------------------------------------------
# Выводим треугольник из звездочек
# n = int(input())
# i = 1
# while i <= n:
#     print('*' * i)
#     i += 1
#
# stars = '*'
# while len(stars) <= n:
#     print(stars)
#     stars += '*'

# ----------------------------------------------
# Вычисляем сумму числе на задаваемом отрезке от а до b
# a = int(input())
# b = int(input())
# i = a
# while i != b:
#     i += 1
#     a += i
#
# print(a)

# ----------------------------------------
#  Суммируем вводимые числа и, после первого нуля, подсчитываем сумму этих чисел

# n = 1
# i = 0
# while n != 0:
#     n = int(input())
#     i += n
# print(i)

# -----------------------------------------------------
#  Ищем наименьшее общее кратное двух чисел

# a = int(input())
# b = int(input())
# i = 1
#
# while i % a != 0 or i % b != 0:
#     i = i + 1
# print(i)

# --------------------------------------------------

# i = 0
#
# while i < 5:
#     a, b = input("Введите два любых числа через пробел").split() # split() разделяет пары чисел по пробелу между ними
#     a = int(a)
#     b = int(b)
#     if(a == 0) and (b == 0):  # Если обе введенных цифры равны 0
#         break  # досрочно завершаем цикл
#     if(a == 0) or (b == 0):
#         continue  # код ниже не выполняется и переходим к следующей итерации
#         # (в том случае, если по условию она должна быть), вывод произведения чисел и приращивание i не происходит.
#         То есть, эту пару чисел игнорируем
#     print(a * b)
#     i += 1
# ---------------------------------------------
# Напишите программу, которая считывает целые числа с консоли по одному числу в строке.
#
# Для каждого введённого числа проверить:
# если число меньше 10, то пропускаем это число;
# если число больше 100, то прекращаем считывать числа;
# в остальных случаях вывести это число обратно на консоль в отдельной строке.


# while True:
#    n = int(input())
#    if n < 10:
#     continue
#    if n > 100:
#     break
#    else:
#        print(n)

# -------------------------------------------------
# Квадрат из звездочек в цикле for

# a = int(input())
# for i in range(a):
#     print('*' * a)

# Двойной цикл

# n = int(input())
# for i in range(n):
#     for j in range(n):  # внутренний цикл выводит звездочку n-раз и создает строку
#         print('*', end=' ')  # end - указываем, что будем использовать в качестве разделителя.
#                              # Вданном случае "пробел". Если end отсутствует, будет обычный перевод на новую строку
#     print()  # этот print делает новую строку без вывода на экран

# -----------------------------------------------------------
# Таблица умножения
# Напишите программу, на вход которой даются четыре числа aa, bb, cc и dd, каждое в своей строке.
# Программа должна вывести фрагмент таблицы умножения для всех чисел отрезка [a; b]
# на все числа отрезка [c;d].
#
# Числа a, b, c и d являются натуральными и не превосходят 10, a <= b, c <= d.
#
# Следуйте формату вывода из примера, для разделения элементов внутри строки используйте '\t' — символ табуляции.
# Заметьте, что левым столбцом и верхней строкой выводятся сами числа из заданных отрезков
# — заголовочные столбец и строка таблицы.

# a = int(input())
# b = int(input())
# c = int(input())
# d = int(input())
#
# print()
# for x in range(c, d + 1):
#     print('\t', x, end='')
# print()
# for i in range(a, b + 1):
#     print(i, end='\t')
#     for n in range(c, d + 1):
#         if n < 10:
#             print('', n * i, end='\t')
#         else:
#             print(n * i, end='\t')
#     print()

# ------------------------------------------
# Вариант 1 Вывести сумму всех нечетных числел от a до b (включая границы)

# a, b = input().split()  # получвем первое и последнее значения диапазона в одной строке через пробел
# a = int(a) # переводим значения в цифоровой формат
# b = int(b)
# x = 0
# for i in range(a, b+1):  # циклом проходимся по множеству от a до b
#      if i % 2 == 1:  # если значение нечетное
#          x += i # складываем значения
# print(x) # выводим сумму

#---------------------------------------------

# Вариант 2 Вывести сумму всех нечетных числел от a до b (включая границы)

# a, b = input().split()  # получвем первое и последнее значения диапазона в одной строке через пробел
# a = int(a) # переводим значения в цифоровой формат
# b = int(b)
# x = 0
# if a % 2 == 0:  # если первое число четное
#     a = a + 1  # увеличиваем его на 1 (берем ближайшее к нему нечетное число)
# for i in range(a, b+1, 2):  # циклом проходимся по множеству от a до b с шагом 2 (через 1) по нечетным числам
#          x += i  # складываем значения
# print(x)  # выводим сумму

#---------------------------------------------

# Вариант 3 Вывести сумму всех нечетных числел от a до b (включая границы)
# Отличается от предыдущего вводом данных

# a, b = (int(i) for i in input().split())  # В такой ситуации, когда нам нужно к последовательности объектов
# # применить одну и ту же ф-ю, мы применяем специальную конструкцию,
# # которая называется list comprehensive (комплексный список).
# # В начале указываем, какую ф-ю мы применяем int(), которую применям для каждого элемента последовательности
# # Выражение, генерирующее эту последвательность, записывается справа input().split().
# # Для каждого объета этой последовательности через цикл применяем ф-ю int()
# # Такую последовательность удобно применять, когда несколько чисел выводятся в одной строке
# x = 0
# if a % 2 == 0:  # если первое число четное
#     a = a + 1  # увеличиваем его на 1 (берем ближайшее к нему нечетное число)
# for i in range(a, b+1, 2):  # циклом проходимся по множеству от a до b с шагом 2 (через 1) по нечетным числам
#          x += i  # складываем значения
# print(x)  # выводим сумму

#---------------------------------------------

'''
Напишите программу, которая считывает с клавиатуры два числа a и b, 
считает и выводит на консоль среднее арифметическое всех чисел из отрезка [a; b], которые делятся на 3.
В приведенном ниже примере среднее арифметическое считается для чисел на отрезке [-5; 12]. 
Всего чисел, делящихся на 3, на этом отрезке 6: -3, 0, 3, 6, 9, 12. Их среднее арифметическое равно 4.5
На вход программе подаются интервалы, внутри которых всегда есть хотя бы одно число, которое делится на 3.
'''

# a, b = (int(i) for i in input().split())
# x = 0
# z = 0
# for i in range(a, b+1):
#     if i % 3 == 0:
#         x += i
#         z += 1
# print(x / z)

#------------------------------------------



