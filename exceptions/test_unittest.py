# unittest
# Одна из наиболее древних библиотек для автоматического тестирования. Ей более 20 лет.
# Но, до сих пор встречаются тесты, написанные на синтаксисе, который использует unittest
# Поэтому ее изучение еще актуально для понимания того, что происходит в коде, который содержит синтаксис unittest
# Модуль unittest, как и pytest поддерживает довольно большоей функционал. Это и автоматические тесты,
# код для настройки общего доступа для совершения тестов. Так же он выводит логовую информацию о том, что произошло,
# то есть есть некоторое удобство в восприятии результатов тестирования.

# Посмотрим на примере ф-и вычисления чисел Фибоначчи,
# # Имеем ф-ю для вычисления числен Фибоначчи
fib_num = lambda n: fib_num(n - 1) + fib_num(n - 2) if n > 2 else 1
# как unittest справляется со своей задачей
# Синтаксис его тестов немного более сложнее, чем в pytest. Здесь необходимо написать наследование класса
import unittest  # импоритруем модуль unittest


class TestFibNum(unittest.TestCase):  # наш класс делаем наследником от класса unittest.
    # теперь здесь можем писать различные тесты.
    # В отличии от pytest, где есть метод assert, в unittest реализована более высокоуровневая струткура
    # Здесь есть проверки на assertTrue, assertFalse, assertEqual
    # напишем проверку на равенство
    def test_simple_1(self):  # в аргумент передаем сам объект этого модуля
        self.assertEqual(fib_num(3), 2)  # здесь проверка равенства того выражения,
    # которое стоит в качестве аргумента ф-и assertEqual

# В терминале запускаем также pytest, так как он проверяет тесты написанные и на unittest.
# Отдельно запускать unittest нет никакого смысла, потому что pytest выполняет всю работу за него.
# Тест прошел успешно - fib_num от 3, это 2
# Также в unittest есть такие команды, как assertTrue и assertFalse - проверка на истинность и ложность
# какого-то выражения
    def test_simple_2(self):
        self.assertTrue(fib_num(5) > 3)  # проверяем истинность выражения, что fib_num от 5 больше чем 3

# Еще один тест assertFalse
    def test_simple_3(self):
        self.assertFalse(fib_num(5) < 3)  # проверяем ложность выражения, что fib_num от 5 меньше чем 3

# Тест пройден. Возвращено значение True


# Как резюме.
# В unittest в отличии от pytest тесты надо писать в виде классов. По этой причине синтаксис в pytest гораздо проще.

