# Работа с документми типа doc

# Часто, при формировании отчетности компаний, возникает ситуация, когда отчеты необходимо генерировать
# в автоматическом режиме. Выполнилась какая-то аналитика, произвели какие-то действия, отработала какая-то программа
# либо какие-то логи с приложения или с сайта, выводится какая-то статитстика и необходимо эти данные на автомате
# передавать в некий шаблон doc.
# Как это происходит? Есть специальная библиотека. У вас в дерриктории проекта находится некий шаблон некоторого отчета.
# В этом отчете определенные поля оставлены пустыми. Но, на самом деле они непустые. На их месте находится определенный
# код. В эти места, в которые по задумке должна вставляться некоторая информация с помощью питоновского скрипта,
# который на вход получает данные от аналитики, вставляется в этот документ. Получается готовый отчет.
# Что находится на этих местах, которые должны постоянно обновляться? В них находится определенная
# полседовательность символов, а именно переменная, которая должна быть вставлена, оформленная в синтаксисе
# шаблонизатора Jinja. Это шаблонизатор для языка Пайтон. Представляет собой маленький набор инструкций,
# который помогает автоматизировать создание HTML шаблонов. Он подобен шаблонизатору Django, но представляет
# пайтон-подобные выражения, обеспечивая исполнение шаблонов в песочнице. Он применяется не только при генерации
# отчетов в формате doc, но и часто вставляется в простые страницы веб-приложений, которые обрамлены с помощью
# шаблонизатора Jinja, Flask, Django и другие фреймворки, позволяющие писать веб-приложения.

# Как это работает на практике.
# Разберем код по генерации автоматического отчета.

import datetime

# from docxtpl import DocxTemplate
# from docxtpl import InlineImage
# from docx.shared import Cm
# from docxtpl import


