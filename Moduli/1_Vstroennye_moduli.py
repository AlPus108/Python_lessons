# Модуль, это файл с пайтен-кодом
# Если вы написали какую-то ф-ю, которая может вам в дальшейшем пригодиться, вам не обязательно переписывать эту ф-ю
# еще раз. Вы можете испльзовать модуль, в котором уже была создана эта ф-я.
# Помимо собственных модулей, созданных программистами, которые можно использовать много раз,
# в Пайтоне существуют так называемые build-in модули, то есть встроенные модули.
# Например, мы уже использвовали такой build-in модуль random(), с помощью которого мы получали случайное целое число.
# В Пайтоне очень большое количество встроенных модулей, которые мы здесь и рассмотрим.

# Так же в Пайтоне существуют и внешние модули и даже пакеты модулей. Это файлы с какой-то функциональностью,
# которые разработали другие стрононние пайтон-программисты и разместили для общего пользования.
# Но, здесь мы рассмотрим именно build-in модули - встроенные модули.

# Встроенные модули, это те модули, которые установленны по умолчанию в языке Пайтон.
# Со всеми встроенными подулями Пайтона можно ознакомиться в интернете по ссылке:
# https://docs.python.org/3/py-modindex.html
# В этом списке сожержится очень большое количество методов. Они сконпанованы по алфавиту.
# В описании к каждому методу дается подробная инструкция по его работе и применению.
# Например, из описания к модулю random:
# random.randint(a, b)
# Return a random integer N such that a <= N <= b. Alias for randrange(a, b+1).
# Если вам надо решить какую-то задачу, вы просто гуглите: набираете слово python, затем описываете вашу проблему
# и в результатах поиска вы обязательно получите ссылки на какие-то модули.
# Далее, вы переходите в этот модуль и просматриваете его документацию,
# и, если она вам подходит, используете ее в своем коде.


# Но, для того, чтобы воспользоваться подходящей ф-ей, ее надо импортировать.
# Здесь можно воспользоваться двумя путями: импортировать сам модуль, в котором она находится или отдельно саму ф-ю.
# Например, ф-я randint находится в модуле random. Можно ипортировать весь модуль
import random
# и затем используем ф-ю с сылкой на ее модуль.
x = random.randint(1, 10)  # возвращает случайное число в указанном диапазоне
print(x)
# Каждый раз, при запуске этого кода, будет выдаваться лучайная цифра от 1 до 10
# Импортировав модуль, мы можем использовать ф-и, которые он содержит, прописывая всю иерархию: модуль.функция()

# Можно ипортировать не сам модуль, а одну ф-ю из данного модуля.
# Например, ф-я randint() входит в модуль random
# Чтобы импортировать одну эту конкретную ф-ю, надо написать следующее:
from random import randint
# В этом случае можно пользоваться ф-ей без ссылки на модуль, в котором она находится.
x = randint(1, 10)  # выдает случайную цифру из заданного диапазона цифр

# Но, в данном случае, когда импортирована только одна ф-я из модуля, но не сам модуль (как в первом примере),
# мы не сможем пользоваться другими ф-ями из этого модуля. Их надо также импортировать отдельно.
from random import shuffle

my_list = [1, 2, 3, 4, 5]
random.shuffle(my_list)  # перемешивает последовательность списка в случайном порядке
print(my_list)

# То есть, если вы будете использовать несколько функций из модуля, то лучше сразу импортировать весь модуль.
# Если вы используете одну-две ф-и, то можно импортировать отдельно только эти ф-и из модуля.

# Также, при импорте ф-и, можно дать ей удобное нам имя, а не то, под которым оно находится в модуле.
# Делается это при помощи ключевого слова as
from random import choice as my_choice
m_c = my_choice(my_list)  # возвращает случайное число из диапазона
print(m_c)
# Это удобно, если вы хотите назвать ф-ю подходящим для контекста вашей программы именем.





