# Web scraping. Что это?

# Web scraping (соскабливание) или web harvesting (собирание урожая) или web data extraction (извлечение),
# это извлечение данных с веб-сайтов. Програмное обеспечение Web scraping может получать доступ к www напрямую
# через Hypertext Transfer Protocol (http) или через web browser.
# Каким же образом мы можем извлекать данные?
# Любая интернет-сраница состоит из различных html-тегов, которые выстраивают весь контент страницы.
# Это разметка веб-страницы. И из этой разметки мы можем извечь текст, который находится на странице.
# Так как это можно увидеть обычными глазами, также и специальному коду, написанному на каком-то языке ничего не мешает
# считать эту информацию. И затем поместить ее в какой-то файл или использовать в каком-то приложении или в базе данных.
# Web scraping, это довольно распространенное явление. Поисковые движки используют Web scraping.
# Для этого существуют специальные роботы, называемые web crouler, которые просматривают содержимое сайтов
# на соответствие содержимого на сайтах, на его контент, что он рекламирует. То есть, они индексируют сайт.
# Это хорошее использование Web scraping. Но, существует и теневой Web scraping. При помощи Web scraping
# можно получить информацию с любых сайтов, даже если сайты этого не хотят. То есть, вы можете считывать информаацию
# с Фейсбука, с Твиттера, с чего угодно. Но, существует такой момент, что если сайт не позволяет этого сделать,
# то владелец сайта может подать на вас в суд. И были приценденты больших штрафов.
# Если вы вдруг захотите эти заниматься, то с этим надо быть очень осторожны. Этим можно заниматься только с разрешения
# владельца сайта.
# Как мы можем узнать, что на каком-то сайте разрешен Web scraping?
# Для этого надо в строке адреса сайта перейти в его конец и через слэш набрать /robots.txt
# Например
# www.facebook.com/robots.txt
# Отобразится текстовой файл со списком, в котором будет укзаано, что разрешено и что запрещено на даннойм сайте.
# Так же там будут перечислены url, с которых нельзя получать информацию.
# Но, не на всех сайтах есть такая страница. И, если ее нет, значит сайты не запрещают Web scraping.
# Но, все эти запреты, это не закон, а скорее договореность.
# В принципе, если вы извелкаете информацию не часто, не отправляеете запрос каждую секунду, то вам ничего не грозит.
# Вы можете делать это на любом сайте.
# В общем, это распространенное явление Web scraping, которое используется как в законных целях, например, для
# индексации веб-сайта, для сравнивания цен на разных сайтах на какие-то товары. Это бывает весьма полезно
# Поэтому, далее мы научимся, как при помощи Пайтон извлекать данные с любой веб-страницы.

# Для Web scraping два инструмента:
# первый - позволяет получить html-код с веб-страницы,
# второй - распознает (парсит) этот код
# Начнем со второго. Это пакет BeautifulSoup.
# Его можно скачать с сайта PyPi. Надо сделать поисковый запрос в Гугле BeautifulSoup и найти ссылку на pypi.org
# https://pypi.org/project/beautifulsoup4/
# Чтобы импоритровать его от туда, надо нажать на кнопку на сайте 'pip install beautifulsoup' copy
# Далее переходим в терминал и набираем
# python -m pip install beautifulsoup4

# (venv) D:\PycharmProjects>python -m pip install beautifulsoup4
# Collecting beautifulsoup4
#   Downloading beautifulsoup4-4.9.0-py3-none-any.whl (109 kB)
#      |████████████████████████████████| 109 kB 233 kB/s
# Collecting soupsieve>1.2
#   Downloading soupsieve-2.0-py2.py3-none-any.whl (32 kB)
# Installing collected packages: soupsieve, beautifulsoup4
# Successfully installed beautifulsoup4-4.9.0 soupsieve-2.0

# Процесс инсталляции прошел успешно.
# Теперь мы можем пользоваться классом beautifulsoup из этого пакета
# Создаем новый файл beautiful_soup_intro.py
# и переходим в него -> beautiful_soup_intro