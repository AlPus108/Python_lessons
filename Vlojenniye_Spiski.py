# ВЛОЖЕННЫЕ СПИСКИ
# Любой список может в себе содержать еще какие-то списки. Это выглидит, как квадратные скобки в кдваратных скобках
# nested_list = [[]]
# Во внутренние скобки помещаем элементы
# nested_list = [[1, 2, 3]] - это первый элемент внешнего списка, который сам является списком
# nested_list = [[1, 2, 3], [4, 5, 6]] - второй элемент внешнего списка, который также является списком
nested_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9, 10, 11]]  # и так далее сколько угодно можро помещать элементов во внутрь
# внешнего списка.
print(nested_list)  # [[1, 2, 3], [4, 5, 6], [7, 8, 9, 10, 11]]
# Вывод на экран получаем в той же форме
print(len(nested_list))  # но длина списка - 3. Это длина внешнего списка, который содержит внутри себя
# три внутренних списка
# Чтобы получить длину одного из внутренних списков, указываем индекс внутреннего списка начиная с 0
print(len(nested_list[1])) # узнаем длину второго внутреннего списка
print(len(nested_list[-1])) # узнаем длину последнего внутреннего списка
# Чтобы получить доступ к элементу внутреннего списка, сначала обращаемся к внешенму списку и указываем индекс
# внутреннего списка, в котором находится наш элемент и затем вторым указываем номер элемента во внутреннем списке
print(nested_list[2][2])  # Получаем 9

# Также можно обратиться к внутреннему списку, начиная нумерацию с конца
print(nested_list[-1][2])  # Также получаем 9
# Также можно получить нумерацию с конца для элемента внутреннего списка
print(nested_list[2][-3])  # Также получаем 9
# И конечно мы можем оба индекса указать с конца
print(nested_list[-1][-3])  # Также получаем 9
# Но, обычно, используют первый способ с нумерацией с начала списков

# Как распечатать все значени этого листа, и внутреннего и внешнего?
nested_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9, 10, 11]]

# С помощью цикла for
for inner_list in nested_list:
    print(inner_list)
# [1, 2, 3]
# [4, 5, 6]
# [7, 8, 9, 10, 11]

# Если хотим распечатать каждый элемент, нужно испльзовать вложенные циклы
for inner_list in nested_list:  # поочередно обращаемся к элементам внешнего списка
    for number in inner_list:  # в каждом элементе внешнего списка перебираем элементы внутренних списков
        print(number, end='')  # 1234567891011

# Элементы в списках могут быть какие угодно
nested_list = [[1, 2, 3, 4.5], [4, 5, 6, True], [7, 8, 'Hello!', 9, 10, 11, False]]
# Также, для перебора всех элементов мы можем использовать List Comprehension
# Пошагово:
# [[]]
# [[print(number)]]
# [[print(number) for number in inner_list]]
[[print(number) for number in inner_list] for inner_list in nested_list]
# 2
# 3
# 4.5
# 4
# 5
# 6
# True
# 7
# 8
# Hello!
# 9
# 10
# 11
# False

# Вложенные списки, как и вложенные циклы используются довольно часто.
# В одном блоке информации могут быть вложены другие блоки. Это один список внутри другого.
# Это часто используется в Data Science, в различных математических операциях, в таких, как матрицах.
# Эту структуру надо знать.
