# Цикл while
# Это цикл с предусловием
# работает до тех пор, пока условие, заложенное в его тело, является истинным


# Простейший while

# i = 0  # инициализируем переменную
# while i < 10:  # пока переменная меньше 10
#     print(i)  # выводим ее на экран
#     i = i + 1  # прибавляем счетчик
# #     если не будет счетчика, мы получим бесконечный цикл
# #     бесконечный цикл бывает в двух случях:
# #      - условия while всегда выполняется
# #      - нет условия для выхода (наличие счетчика в данном случае)
# #     это нужно проверять и обрабатывать условия выхода
# #     например
#     if i == 5: break  # если переменная равна 5 - прерывание цикла
# #     break не рекомендуется использовать при написании циклов, но, если есть такая необходимость,
# #     то это не запрещается
#
# # Более сложный цикл
#
# answer = None
#
# while answer != 'Volvo':
#     answer = input('Какая лучшая марка автомобиля?')
# print('Вы абсолютно правы!')
# #  В данном случае условием выхода из цикла является совпадение переменной answer (str) со значением Volvo (str}
#
# # Оператор ветвления continue
#
# while i < 10:  # пока переменная меньше 10
#     print(i)  # выводим ее на экран
#     i = i + 1  # прибавляем счетчик
#     if i == 9: break  # мы выходим, когда i сравняется с 9
#     if i < 3: continue  # когда i < 3, мы не будем производить никаких операций с циклом и перейдем в следующий код


# В while так же можно использовать и ветку else
# x = 0
# while x < 10:
#     print(str(x) + ' х меньше 10')
#     x += 1  # счетчик надо обязательно приращивать, иначе будет бесконечный цикл
# else:
#     print(str(x) + ' х не меньше 10')
#
# # Ключевой else мы можем использовать не только в цикле while, но и в цикле for
# for x in range(10):  # Здесь х прибавляется автоматически, его не надо выносить в отдельный счетчик
#     print(str(x) + ' х меньше 10')
# else:
#     print(str(x) + ' х не меньше 10')

# Какой цикл использовать каждый программист решает сам, согласно своим предпочтениям или по ситуации.

# ------------------------------break, continue, pass -------------------------------

# У цикла while есть еще несколько ключевых слов

# # pass

# # Имеем лист
# my_list = [1, 2, 3]
# # Мы хотим использовать цикл for для итирации его элементов
# # Но это в будущем, а пока что просто поставим "пустышку"
# for item in my_list:
#     # мы пока здесь ничего не кодируем, а пропускаем, для этого вставляем слово pass
#     pass  # это слово ничего не делает. Оно позволяет пропустить тело цикла и продолжить выполнять следующий за ним код.
# # В Питоне важны отступы в коде и это слово как раз делает этот отступ. Это слово используется практически везде,
# чтобы создать какую-то функцию без тела, а потом уже вернуться к ней и допрограммировать код.

# break

# my_list = [1, 2, 3]
#
# for item in my_list:
#     if item == 2:  # если по условию в цикле встречается, например 2, мы должны выйти из цикла. Для этого используем if
#         break  # как только встречается 2 - ключевое слово break прерывает цикл и выполняется дальнейший код
#     print(item)

# continue

my_list = [1, 2, 3]

for item in my_list:
    if item == 2:  #
        continue  #
    print(item)  # Вывод: 1 3
# при наступлении события item == 2 оператор continue прерывает текущую итерацию цикла и переводит выполнение цикла
# в его начало. И также проверяет следующую итерацию на выполнение условия цикла. Если условие не совпадает, он
# не прерывает итирацию.

# break прерывает цикл и переводит выполнение в его конец.
# continue прерывает цикл и переводит выполнение в его начало.
